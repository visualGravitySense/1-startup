#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
"""

import sys
from pathlib import Path
import pandas as pd

def test_data_availability():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞")
    print("=" * 50)
    
    DATA_DIR = Path("data/raw")
    
    if not DATA_DIR.exists():
        print("‚ùå –ü–∞–ø–∫–∞ data/raw –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: python kaggle_downloader_venv.py")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    education_files = [
        ("Student Exams", DATA_DIR / "education" / "whenamancodes_students-performance-in-exams" / "exams.csv"),
        ("Student Performance", DATA_DIR / "education" / "larsen0966_student-performance-data-set" / "student-por.csv"),
        ("xAPI Education", DATA_DIR / "education" / "aljarah_xAPI-Edu-Data" / "xAPI-Edu-Data.csv")
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    market_files = [
        ("Salary Data", DATA_DIR / "job_market" / "rkiattisak_salaly-prediction-for-beginer" / "Salary Data.csv"),
        ("Data Science Jobs", DATA_DIR / "job_market" / "andrewmvd_data-scientist-jobs" / "DataScientist.csv")
    ]
    
    print("\nüìö –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    education_available = 0
    for name, path in education_files:
        if path.exists():
            try:
                if name == "Student Performance":
                    df = pd.read_csv(path, sep=';')
                else:
                    df = pd.read_csv(path)
                print(f"  ‚úÖ {name}: {len(df):,} –∑–∞–ø–∏—Å–µ–π")
                education_available += 1
            except Exception as e:
                print(f"  ‚ö†Ô∏è  {name}: –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è - {e}")
        else:
            print(f"  ‚ùå {name}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("\nüíº –†—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:")
    market_available = 0
    for name, path in market_files:
        if path.exists():
            try:
                df = pd.read_csv(path)
                print(f"  ‚úÖ {name}: {len(df):,} –∑–∞–ø–∏—Å–µ–π")
                market_available += 1
            except Exception as e:
                print(f"  ‚ö†Ô∏è  {name}: –æ—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è - {e}")
        else:
            print(f"  ‚ùå {name}: —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    total_available = education_available + market_available
    total_expected = len(education_files) + len(market_files)
    
    print(f"\nüìä –ò—Ç–æ–≥–æ: {total_available}/{total_expected} –¥–∞—Ç–∞—Å–µ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ")
    
    if total_available == 0:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞!")
        return False
    elif total_available < total_expected:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –Ω–æ –¥–∞—à–±–æ—Ä–¥ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å")
        return True
    else:
        print("‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã!")
        return True

def test_dependencies():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"""
    print("\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:")
    
    required_packages = [
        ('pandas', 'pd'),
        ('plotly.express', 'px'),
        ('plotly.graph_objects', 'go'),
        ('dash', None)
    ]
    
    missing_packages = []
    
    for package, alias in required_packages:
        try:
            if alias:
                exec(f"import {package} as {alias}")
            else:
                exec(f"import {package}")
            print(f"  ‚úÖ {package}")
        except ImportError:
            print(f"  ‚ùå {package}")
            missing_packages.append(package)
    
    if missing_packages:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–∞–∫–µ—Ç—ã: {', '.join(missing_packages)}")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏—Ö: pip install plotly dash pandas")
        return False
    else:
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        return True

def test_dashboard_import():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–∞ –¥–∞—à–±–æ—Ä–¥–∞"""
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –¥–∞—à–±–æ—Ä–¥–∞:")
    
    try:
        from education_dashboard import EducationDashboard
        print("  ‚úÖ –ò–º–ø–æ—Ä—Ç EducationDashboard —É—Å–ø–µ—à–µ–Ω")
        
        # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä
        dashboard = EducationDashboard()
        print("  ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
        data_count = len(dashboard.data)
        print(f"  ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {data_count} –¥–∞—Ç–∞—Å–µ—Ç–æ–≤")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –î–ê–®–ë–û–†–î–ê –û–ë–†–ê–ó–û–í–ê–¢–ï–õ–¨–ù–û–ô –ü–õ–ê–¢–§–û–†–ú–´")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    deps_ok = test_dependencies()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    data_ok = test_data_availability()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –¥–∞—à–±–æ—Ä–¥–∞
    if deps_ok:
        import_ok = test_dashboard_import()
    else:
        import_ok = False
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 60)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    
    if deps_ok and data_ok and import_ok:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –î–∞—à–±–æ—Ä–¥ –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
        print("\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("   python education_dashboard.py")
        print("   –∏–ª–∏")
        print("   run_dashboard.bat")
        print("\nüåê –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ: http://localhost:8050")
        return True
    else:
        print("‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´:")
        if not deps_ok:
            print("  ‚Ä¢ –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã")
        if not data_ok:
            print("  ‚Ä¢ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
        if not import_ok:
            print("  ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–¥–æ–º –¥–∞—à–±–æ—Ä–¥–∞")
        
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        if not deps_ok:
            print("  1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install plotly dash pandas")
        if not data_ok:
            print("  2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ: python kaggle_downloader_venv.py")
        
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 