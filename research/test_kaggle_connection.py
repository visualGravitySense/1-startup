#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Kaggle API
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É API –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ –±–æ–ª—å—à–∏—Ö –¥–∞—Ç–∞—Å–µ—Ç–æ–≤
"""

def test_kaggle_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Kaggle API"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Kaggle API...")
    print("=" * 50)
    
    try:
        from kaggle.api.kaggle_api_extended import KaggleApi
        print("‚úÖ Kaggle –ø–∞–∫–µ—Ç –Ω–∞–π–¥–µ–Ω")
        
        api = KaggleApi()
        print("‚úÖ API –æ–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞–Ω")
        
        api.authenticate()
        print("‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–æ–≤ (–±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏)
        print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ API...")
        datasets = api.dataset_list(search="student", page_size=3)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(datasets)} –¥–∞—Ç–∞—Å–µ—Ç–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É 'student'")
        
        print("\nüìã –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –¥–∞—Ç–∞—Å–µ—Ç–æ–≤:")
        for i, dataset in enumerate(datasets[:3], 1):
            print(f"{i}. {dataset.ref} - {dataset.title}")
        
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
        print("üöÄ –ú–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å: python kaggle_downloader_venv.py")
        
        return True
        
    except ImportError:
        print("‚ùå Kaggle –ø–∞–∫–µ—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install kaggle")
        return False
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª kaggle.json –≤ C:\\Users\\Dmitri\\.kaggle\\")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
        print("3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API —Ç–æ–∫–µ–Ω –Ω–∞ https://www.kaggle.com/settings/account")
        return False

if __name__ == "__main__":
    test_kaggle_connection() 