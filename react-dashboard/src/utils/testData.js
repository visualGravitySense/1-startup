// –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è Firebase
import { preorderService, automationService, interviewService } from '../firebase/service.js'

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–µ–¥–∑–∞–∫–∞–∑—ã
const samplePreorders = [
  {
    email: 'alexey@example.com',
    name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
    amount: 24,
    source: 'telegram',
    timestamp: new Date('2024-01-15')
  },
  {
    email: 'maria@example.com', 
    name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
    amount: 24,
    source: 'linkedin',
    timestamp: new Date('2024-01-14')
  },
  {
    email: 'dmitri@example.com',
    name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
    amount: 24,
    source: 'telegram',
    timestamp: new Date('2024-01-13')
  },
  {
    email: 'elena@example.com',
    name: '–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
    amount: 24,
    source: 'direct',
    timestamp: new Date('2024-01-12')
  },
  {
    email: 'sergey@example.com',
    name: '–°–µ—Ä–≥–µ–π –í–æ–ª–∫–æ–≤',
    amount: 24,
    source: 'telegram',
    timestamp: new Date('2024-01-11')
  }
]

// –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
const samplePosts = [
  {
    platform: 'telegram',
    content: '–ö–∞–∫ –æ–±—ä—è—Å–Ω–∏—Ç—å –∫–æ–¥ –±–∏–∑–Ω–µ—Å—É? –ù–æ–≤—ã–π –∫—É—Ä—Å –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤!',
    language: 'ru',
    timestamp: new Date('2024-01-15'),
    engagement: { views: 1250, clicks: 45 }
  },
  {
    platform: 'linkedin',
    content: 'How to explain code to business? New course for developers!',
    language: 'en', 
    timestamp: new Date('2024-01-14'),
    engagement: { views: 890, clicks: 32 }
  },
  {
    platform: 'telegram',
    content: 'Kuidas selgitada koodi √§ridele? Uus kursus arendajatele!',
    language: 'et',
    timestamp: new Date('2024-01-13'),
    engagement: { views: 567, clicks: 18 }
  },
  {
    platform: 'linkedin',
    content: 'The communication gap between developers and business stakeholders',
    language: 'en',
    timestamp: new Date('2024-01-12'),
    engagement: { views: 1100, clicks: 41 }
  },
  {
    platform: 'telegram',
    content: '–ü–æ—á–µ–º—É —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –±–∏–∑–Ω–µ—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞?',
    language: 'ru',
    timestamp: new Date('2024-01-11'),
    engagement: { views: 980, clicks: 36 }
  }
]

// –¢–µ—Å—Ç–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä–≤—å—é
const sampleInterviews = [
  {
    name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
    email: 'alexey@example.com',
    date: '2024-01-10',
    status: 'completed',
    rating: 5,
    notes: '–û—á–µ–Ω—å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω –≤ –∫—É—Ä—Å–µ. –ì–æ—Ç–æ–≤ –ø–ª–∞—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å.',
    painPoints: ['communication', 'technical_debt', 'stakeholder_management']
  },
  {
    name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
    email: 'maria@example.com', 
    date: '2024-01-09',
    status: 'completed',
    rating: 4,
    notes: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∞ –ø—Ä–æ–±–ª–µ–º—É. –ò—â–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è.',
    painPoints: ['requirements', 'deadlines', 'documentation']
  },
  {
    name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤',
    email: 'dmitri@example.com',
    date: '2024-01-08',
    status: 'completed',
    rating: 5,
    notes: '–¢–∏–º–ª–∏–¥, –≥–æ—Ç–æ–≤ –æ–±—É—á–∏—Ç—å –≤—Å—é –∫–æ–º–∞–Ω–¥—É.',
    painPoints: ['team_communication', 'project_scope', 'client_expectations']
  },
  {
    name: '–ï–ª–µ–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞',
    email: 'elena@example.com',
    date: '2024-01-07',
    status: 'completed',
    rating: 4,
    notes: '–§—Ä–∏–ª–∞–Ω—Å–µ—Ä, –Ω—É–∂–Ω—ã –Ω–∞–≤—ã–∫–∏ —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.',
    painPoints: ['client_communication', 'scope_creep', 'pricing']
  },
  {
    name: '–°–µ—Ä–≥–µ–π –í–æ–ª–∫–æ–≤',
    email: 'sergey@example.com',
    date: '2024-01-18',
    status: 'scheduled',
    rating: null,
    notes: '–ò–Ω—Ç–µ—Ä–≤—å—é –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ –∑–∞–≤—Ç—Ä–∞.',
    painPoints: []
  }
]

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
export async function populateTestData() {
  try {
    console.log('üîÑ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ Firebase —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...')

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–∑–∞–∫–∞–∑—ã
    console.log('üì¶ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–∑–∞–∫–∞–∑–æ–≤...')
    for (const preorder of samplePreorders) {
      await preorderService.add(preorder)
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å—Ç—ã
    console.log('üì± –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–æ–≤...')
    for (const post of samplePosts) {
      await automationService.addPost(post)
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤—å—é
    console.log('üë• –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤—å—é...')
    for (const interview of sampleInterviews) {
      await interviewService.add(interview)
    }

    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!')
    return true

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error)
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
export async function clearTestData() {
  try {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—á–∏—Å—Ç–∫–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    // –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã!')
    return true

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö:', error)
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase
export async function testFirebaseConnection() {
  try {
    console.log('üî• –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase...')
    
    // –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
    const preorders = await preorderService.getAll()
    console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${preorders.length} –ø—Ä–µ–¥–∑–∞–∫–∞–∑–æ–≤`)
    
    const stats = await automationService.getStats()
    console.log(`üì± –ù–∞–π–¥–µ–Ω–æ ${stats.totalPosts} –ø–æ—Å—Ç–æ–≤`)
    
    const interviews = await interviewService.getAll()
    console.log(`üë• –ù–∞–π–¥–µ–Ω–æ ${interviews.length} –∏–Ω—Ç–µ—Ä–≤—å—é`)
    
    console.log('‚úÖ Firebase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!')
    return true

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase:', error)
    return false
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
if (typeof window !== 'undefined') {
  window.FirebaseTestUtils = {
    populateTestData,
    clearTestData,
    testFirebaseConnection
  }
} 